{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\cursor\\\\netrik website\\\\Netrik-techworks-website\\\\frontend\\\\src\\\\components\\\\AdvancedParticleBackground.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvancedParticleBackground = ({\n  theme = \"dark\"\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const particlesRef = useRef([]);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [isDark, setIsDark] = useState(theme === \"dark\");\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    // Create different types of particles\n    const createParticle = (type = \"default\") => {\n      const baseParticle = {\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        vx: (Math.random() - 0.5) * 0.8,\n        vy: (Math.random() - 0.5) * 0.8,\n        size: Math.random() * 4 + 1,\n        opacity: Math.random() * 0.6 + 0.2,\n        originalSize: Math.random() * 4 + 1,\n        type: type,\n        rotation: 0,\n        rotationSpeed: (Math.random() - 0.5) * 0.02,\n        pulsePhase: Math.random() * Math.PI * 2,\n        pulseSpeed: Math.random() * 0.02 + 0.01\n      };\n\n      // Add type-specific properties\n      switch (type) {\n        case \"star\":\n          return {\n            ...baseParticle,\n            points: 5,\n            innerRadius: baseParticle.size * 0.4,\n            outerRadius: baseParticle.size,\n            color: isDark ? \"#60a5fa\" : \"#3b82f6\"\n          };\n        case \"hexagon\":\n          return {\n            ...baseParticle,\n            sides: 6,\n            color: isDark ? \"#a78bfa\" : \"#8b5cf6\"\n          };\n        case \"circle\":\n          return {\n            ...baseParticle,\n            color: isDark ? \"#34d399\" : \"#10b981\"\n          };\n        case \"diamond\":\n          return {\n            ...baseParticle,\n            color: isDark ? \"#fbbf24\" : \"#f59e0b\"\n          };\n        default:\n          return {\n            ...baseParticle,\n            color: isDark ? \"#f472b6\" : \"#ec4899\"\n          };\n      }\n    };\n    const initParticles = () => {\n      particlesRef.current = [];\n      const particleTypes = [\"star\", \"hexagon\", \"circle\", \"diamond\", \"default\"];\n      for (let i = 0; i < 80; i++) {\n        const type = particleTypes[Math.floor(Math.random() * particleTypes.length)];\n        particlesRef.current.push(createParticle(type));\n      }\n    };\n    const updateParticles = () => {\n      particlesRef.current.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.rotation += particle.rotationSpeed;\n        particle.pulsePhase += particle.pulseSpeed;\n\n        // Mouse interaction with different effects for different types\n        const dx = mouseRef.current.x - particle.x;\n        const dy = mouseRef.current.y - particle.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < 120) {\n          const force = (120 - distance) / 120;\n          particle.vx += dx / distance * force * 0.02;\n          particle.vy += dy / distance * force * 0.02;\n          particle.size = particle.originalSize + force * 3;\n          particle.opacity = Math.min(0.9, particle.opacity + force * 0.4);\n        } else {\n          particle.size = Math.max(particle.originalSize, particle.size - 0.05);\n          particle.opacity = Math.max(0.2, particle.opacity - 0.01);\n        }\n\n        // Boundary check with bounce\n        if (particle.x < 0 || particle.x > canvas.width) {\n          particle.vx *= -0.8;\n          particle.x = Math.max(0, Math.min(canvas.width, particle.x));\n        }\n        if (particle.y < 0 || particle.y > canvas.height) {\n          particle.vy *= -0.8;\n          particle.y = Math.max(0, Math.min(canvas.height, particle.y));\n        }\n      });\n    };\n    const drawParticle = particle => {\n      ctx.save();\n      ctx.translate(particle.x, particle.y);\n      ctx.rotate(particle.rotation);\n      const pulse = Math.sin(particle.pulsePhase) * 0.3 + 1;\n      const currentSize = particle.size * pulse;\n      ctx.globalAlpha = particle.opacity;\n\n      // Create gradient based on theme\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, currentSize * 2);\n      if (isDark) {\n        gradient.addColorStop(0, particle.color);\n        gradient.addColorStop(0.5, particle.color + \"80\");\n        gradient.addColorStop(1, particle.color + \"00\");\n      } else {\n        gradient.addColorStop(0, particle.color + \"ff\");\n        gradient.addColorStop(0.5, particle.color + \"80\");\n        gradient.addColorStop(1, particle.color + \"20\");\n      }\n      ctx.fillStyle = gradient;\n      switch (particle.type) {\n        case \"star\":\n          drawStar(ctx, 0, 0, particle.points, currentSize, particle.innerRadius);\n          break;\n        case \"hexagon\":\n          drawHexagon(ctx, 0, 0, currentSize);\n          break;\n        case \"diamond\":\n          drawDiamond(ctx, 0, 0, currentSize);\n          break;\n        default:\n          ctx.beginPath();\n          ctx.arc(0, 0, currentSize, 0, Math.PI * 2);\n          ctx.fill();\n      }\n      ctx.restore();\n    };\n    const drawStar = (ctx, x, y, points, outerRadius, innerRadius) => {\n      ctx.beginPath();\n      for (let i = 0; i < points * 2; i++) {\n        const radius = i % 2 === 0 ? outerRadius : innerRadius;\n        const angle = i * Math.PI / points;\n        const px = x + Math.cos(angle) * radius;\n        const py = y + Math.sin(angle) * radius;\n        if (i === 0) ctx.moveTo(px, py);else ctx.lineTo(px, py);\n      }\n      ctx.closePath();\n      ctx.fill();\n    };\n    const drawHexagon = (ctx, x, y, radius) => {\n      ctx.beginPath();\n      for (let i = 0; i < 6; i++) {\n        const angle = i * Math.PI / 3;\n        const px = x + Math.cos(angle) * radius;\n        const py = y + Math.sin(angle) * radius;\n        if (i === 0) ctx.moveTo(px, py);else ctx.lineTo(px, py);\n      }\n      ctx.closePath();\n      ctx.fill();\n    };\n    const drawDiamond = (ctx, x, y, size) => {\n      ctx.beginPath();\n      ctx.moveTo(x, y - size);\n      ctx.lineTo(x + size, y);\n      ctx.lineTo(x, y + size);\n      ctx.lineTo(x - size, y);\n      ctx.closePath();\n      ctx.fill();\n    };\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw particles\n      particlesRef.current.forEach(particle => {\n        drawParticle(particle);\n      });\n\n      // Draw connections between nearby particles\n      particlesRef.current.forEach((particle, i) => {\n        particlesRef.current.slice(i + 1).forEach(otherParticle => {\n          const dx = particle.x - otherParticle.x;\n          const dy = particle.y - otherParticle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 150) {\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(otherParticle.x, otherParticle.y);\n            const opacity = Math.max(0, 0.3 - distance / 500);\n            ctx.strokeStyle = isDark ? `rgba(99, 102, 241, ${opacity})` : `rgba(59, 130, 246, ${opacity})`;\n            ctx.lineWidth = 0.5;\n            ctx.stroke();\n          }\n        });\n      });\n    };\n    const animate = () => {\n      updateParticles();\n      drawParticles();\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    const handleMouseMove = e => {\n      mouseRef.current.x = e.clientX;\n      mouseRef.current.y = e.clientY;\n    };\n    const handleThemeChange = () => {\n      setIsDark(!isDark);\n      particlesRef.current.forEach(particle => {\n        // Update colors based on new theme\n        switch (particle.type) {\n          case \"star\":\n            particle.color = !isDark ? \"#60a5fa\" : \"#3b82f6\";\n            break;\n          case \"hexagon\":\n            particle.color = !isDark ? \"#a78bfa\" : \"#8b5cf6\";\n            break;\n          case \"circle\":\n            particle.color = !isDark ? \"#34d399\" : \"#10b981\";\n            break;\n          case \"diamond\":\n            particle.color = !isDark ? \"#fbbf24\" : \"#f59e0b\";\n            break;\n          default:\n            particle.color = !isDark ? \"#f472b6\" : \"#ec4899\";\n        }\n      });\n    };\n    resizeCanvas();\n    initParticles();\n    animate();\n    window.addEventListener(\"resize\", resizeCanvas);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isDark]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 pointer-events-none z-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"w-full h-full\",\n      style: {\n        background: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsDark(!isDark),\n      className: \"fixed top-4 right-4 z-50 pointer-events-auto bg-white/10 backdrop-blur-xl border border-white/20 rounded-lg px-4 py-2 text-white hover:bg-white/20 transition-all duration-300\",\n      children: isDark ? \"‚òÄÔ∏è Light\" : \"üåô Dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedParticleBackground, \"xL8S5RSiEADw/4zjPZjCS6AF8qo=\");\n_c = AdvancedParticleBackground;\nexport default AdvancedParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"AdvancedParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AdvancedParticleBackground","theme","_s","canvasRef","animationRef","particlesRef","mouseRef","x","y","isDark","setIsDark","canvas","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","createParticle","type","baseParticle","Math","random","vx","vy","size","opacity","originalSize","rotation","rotationSpeed","pulsePhase","PI","pulseSpeed","points","innerRadius","outerRadius","color","sides","initParticles","particleTypes","i","floor","length","push","updateParticles","forEach","particle","dx","dy","distance","sqrt","force","min","max","drawParticle","save","translate","rotate","pulse","sin","currentSize","globalAlpha","gradient","createRadialGradient","addColorStop","fillStyle","drawStar","drawHexagon","drawDiamond","beginPath","arc","fill","restore","radius","angle","px","cos","py","moveTo","lineTo","closePath","drawParticles","clearRect","slice","otherParticle","strokeStyle","lineWidth","stroke","animate","requestAnimationFrame","handleMouseMove","e","clientX","clientY","handleThemeChange","addEventListener","removeEventListener","cancelAnimationFrame","className","children","ref","style","background","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/important/cursor/netrik website/Netrik-techworks-website/frontend/src/components/AdvancedParticleBackground.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst AdvancedParticleBackground = ({ theme = \"dark\" }) => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const particlesRef = useRef([]);\r\n  const mouseRef = useRef({ x: 0, y: 0 });\r\n  const [isDark, setIsDark] = useState(theme === \"dark\");\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    \r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n\r\n    // Create different types of particles\r\n    const createParticle = (type = \"default\") => {\r\n      const baseParticle = {\r\n        x: Math.random() * canvas.width,\r\n        y: Math.random() * canvas.height,\r\n        vx: (Math.random() - 0.5) * 0.8,\r\n        vy: (Math.random() - 0.5) * 0.8,\r\n        size: Math.random() * 4 + 1,\r\n        opacity: Math.random() * 0.6 + 0.2,\r\n        originalSize: Math.random() * 4 + 1,\r\n        type: type,\r\n        rotation: 0,\r\n        rotationSpeed: (Math.random() - 0.5) * 0.02,\r\n        pulsePhase: Math.random() * Math.PI * 2,\r\n        pulseSpeed: Math.random() * 0.02 + 0.01,\r\n      };\r\n\r\n      // Add type-specific properties\r\n      switch (type) {\r\n        case \"star\":\r\n          return {\r\n            ...baseParticle,\r\n            points: 5,\r\n            innerRadius: baseParticle.size * 0.4,\r\n            outerRadius: baseParticle.size,\r\n            color: isDark ? \"#60a5fa\" : \"#3b82f6\",\r\n          };\r\n        case \"hexagon\":\r\n          return {\r\n            ...baseParticle,\r\n            sides: 6,\r\n            color: isDark ? \"#a78bfa\" : \"#8b5cf6\",\r\n          };\r\n        case \"circle\":\r\n          return {\r\n            ...baseParticle,\r\n            color: isDark ? \"#34d399\" : \"#10b981\",\r\n          };\r\n        case \"diamond\":\r\n          return {\r\n            ...baseParticle,\r\n            color: isDark ? \"#fbbf24\" : \"#f59e0b\",\r\n          };\r\n        default:\r\n          return {\r\n            ...baseParticle,\r\n            color: isDark ? \"#f472b6\" : \"#ec4899\",\r\n          };\r\n      }\r\n    };\r\n\r\n    const initParticles = () => {\r\n      particlesRef.current = [];\r\n      const particleTypes = [\"star\", \"hexagon\", \"circle\", \"diamond\", \"default\"];\r\n      \r\n      for (let i = 0; i < 80; i++) {\r\n        const type = particleTypes[Math.floor(Math.random() * particleTypes.length)];\r\n        particlesRef.current.push(createParticle(type));\r\n      }\r\n    };\r\n\r\n    const updateParticles = () => {\r\n      particlesRef.current.forEach((particle) => {\r\n        particle.x += particle.vx;\r\n        particle.y += particle.vy;\r\n        particle.rotation += particle.rotationSpeed;\r\n        particle.pulsePhase += particle.pulseSpeed;\r\n\r\n        // Mouse interaction with different effects for different types\r\n        const dx = mouseRef.current.x - particle.x;\r\n        const dy = mouseRef.current.y - particle.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        if (distance < 120) {\r\n          const force = (120 - distance) / 120;\r\n          particle.vx += (dx / distance) * force * 0.02;\r\n          particle.vy += (dy / distance) * force * 0.02;\r\n          particle.size = particle.originalSize + force * 3;\r\n          particle.opacity = Math.min(0.9, particle.opacity + force * 0.4);\r\n        } else {\r\n          particle.size = Math.max(particle.originalSize, particle.size - 0.05);\r\n          particle.opacity = Math.max(0.2, particle.opacity - 0.01);\r\n        }\r\n\r\n        // Boundary check with bounce\r\n        if (particle.x < 0 || particle.x > canvas.width) {\r\n          particle.vx *= -0.8;\r\n          particle.x = Math.max(0, Math.min(canvas.width, particle.x));\r\n        }\r\n        if (particle.y < 0 || particle.y > canvas.height) {\r\n          particle.vy *= -0.8;\r\n          particle.y = Math.max(0, Math.min(canvas.height, particle.y));\r\n        }\r\n      });\r\n    };\r\n\r\n    const drawParticle = (particle) => {\r\n      ctx.save();\r\n      ctx.translate(particle.x, particle.y);\r\n      ctx.rotate(particle.rotation);\r\n      \r\n      const pulse = Math.sin(particle.pulsePhase) * 0.3 + 1;\r\n      const currentSize = particle.size * pulse;\r\n      \r\n      ctx.globalAlpha = particle.opacity;\r\n      \r\n      // Create gradient based on theme\r\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, currentSize * 2);\r\n      if (isDark) {\r\n        gradient.addColorStop(0, particle.color);\r\n        gradient.addColorStop(0.5, particle.color + \"80\");\r\n        gradient.addColorStop(1, particle.color + \"00\");\r\n      } else {\r\n        gradient.addColorStop(0, particle.color + \"ff\");\r\n        gradient.addColorStop(0.5, particle.color + \"80\");\r\n        gradient.addColorStop(1, particle.color + \"20\");\r\n      }\r\n      \r\n      ctx.fillStyle = gradient;\r\n      \r\n      switch (particle.type) {\r\n        case \"star\":\r\n          drawStar(ctx, 0, 0, particle.points, currentSize, particle.innerRadius);\r\n          break;\r\n        case \"hexagon\":\r\n          drawHexagon(ctx, 0, 0, currentSize);\r\n          break;\r\n        case \"diamond\":\r\n          drawDiamond(ctx, 0, 0, currentSize);\r\n          break;\r\n        default:\r\n          ctx.beginPath();\r\n          ctx.arc(0, 0, currentSize, 0, Math.PI * 2);\r\n          ctx.fill();\r\n      }\r\n      \r\n      ctx.restore();\r\n    };\r\n\r\n    const drawStar = (ctx, x, y, points, outerRadius, innerRadius) => {\r\n      ctx.beginPath();\r\n      for (let i = 0; i < points * 2; i++) {\r\n        const radius = i % 2 === 0 ? outerRadius : innerRadius;\r\n        const angle = (i * Math.PI) / points;\r\n        const px = x + Math.cos(angle) * radius;\r\n        const py = y + Math.sin(angle) * radius;\r\n        if (i === 0) ctx.moveTo(px, py);\r\n        else ctx.lineTo(px, py);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    };\r\n\r\n    const drawHexagon = (ctx, x, y, radius) => {\r\n      ctx.beginPath();\r\n      for (let i = 0; i < 6; i++) {\r\n        const angle = (i * Math.PI) / 3;\r\n        const px = x + Math.cos(angle) * radius;\r\n        const py = y + Math.sin(angle) * radius;\r\n        if (i === 0) ctx.moveTo(px, py);\r\n        else ctx.lineTo(px, py);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    };\r\n\r\n    const drawDiamond = (ctx, x, y, size) => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y - size);\r\n      ctx.lineTo(x + size, y);\r\n      ctx.lineTo(x, y + size);\r\n      ctx.lineTo(x - size, y);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    };\r\n\r\n    const drawParticles = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Draw particles\r\n      particlesRef.current.forEach((particle) => {\r\n        drawParticle(particle);\r\n      });\r\n\r\n      // Draw connections between nearby particles\r\n      particlesRef.current.forEach((particle, i) => {\r\n        particlesRef.current.slice(i + 1).forEach((otherParticle) => {\r\n          const dx = particle.x - otherParticle.x;\r\n          const dy = particle.y - otherParticle.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n          if (distance < 150) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(particle.x, particle.y);\r\n            ctx.lineTo(otherParticle.x, otherParticle.y);\r\n            \r\n            const opacity = Math.max(0, 0.3 - distance / 500);\r\n            ctx.strokeStyle = isDark \r\n              ? `rgba(99, 102, 241, ${opacity})`\r\n              : `rgba(59, 130, 246, ${opacity})`;\r\n            ctx.lineWidth = 0.5;\r\n            ctx.stroke();\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    const animate = () => {\r\n      updateParticles();\r\n      drawParticles();\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n      mouseRef.current.x = e.clientX;\r\n      mouseRef.current.y = e.clientY;\r\n    };\r\n\r\n    const handleThemeChange = () => {\r\n      setIsDark(!isDark);\r\n      particlesRef.current.forEach(particle => {\r\n        // Update colors based on new theme\r\n        switch (particle.type) {\r\n          case \"star\":\r\n            particle.color = !isDark ? \"#60a5fa\" : \"#3b82f6\";\r\n            break;\r\n          case \"hexagon\":\r\n            particle.color = !isDark ? \"#a78bfa\" : \"#8b5cf6\";\r\n            break;\r\n          case \"circle\":\r\n            particle.color = !isDark ? \"#34d399\" : \"#10b981\";\r\n            break;\r\n          case \"diamond\":\r\n            particle.color = !isDark ? \"#fbbf24\" : \"#f59e0b\";\r\n            break;\r\n          default:\r\n            particle.color = !isDark ? \"#f472b6\" : \"#ec4899\";\r\n        }\r\n      });\r\n    };\r\n\r\n    resizeCanvas();\r\n    initParticles();\r\n    animate();\r\n\r\n    window.addEventListener(\"resize\", resizeCanvas);\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeCanvas);\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n    };\r\n  }, [isDark]);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 pointer-events-none z-0\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"w-full h-full\"\r\n        style={{ background: \"transparent\" }}\r\n      />\r\n      <button\r\n        onClick={() => setIsDark(!isDark)}\r\n        className=\"fixed top-4 right-4 z-50 pointer-events-auto bg-white/10 backdrop-blur-xl border border-white/20 rounded-lg px-4 py-2 text-white hover:bg-white/20 transition-all duration-300\"\r\n      >\r\n        {isDark ? \"‚òÄÔ∏è Light\" : \"üåô Dark\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedParticleBackground;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,0BAA0B,GAAGA,CAAC;EAAEC,KAAK,GAAG;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMQ,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMS,YAAY,GAAGT,MAAM,CAAC,EAAE,CAAC;EAC/B,MAAMU,QAAQ,GAAGV,MAAM,CAAC;IAAEW,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACI,KAAK,KAAK,MAAM,CAAC;EAEtDN,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAGR,SAAS,CAACS,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBJ,MAAM,CAACK,KAAK,GAAGC,MAAM,CAACC,UAAU;MAChCP,MAAM,CAACQ,MAAM,GAAGF,MAAM,CAACG,WAAW;IACpC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGA,CAACC,IAAI,GAAG,SAAS,KAAK;MAC3C,MAAMC,YAAY,GAAG;QACnBhB,CAAC,EAAEiB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGd,MAAM,CAACK,KAAK;QAC/BR,CAAC,EAAEgB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGd,MAAM,CAACQ,MAAM;QAChCO,EAAE,EAAE,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;QAC/BE,EAAE,EAAE,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;QAC/BG,IAAI,EAAEJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QAC3BI,OAAO,EAAEL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;QAClCK,YAAY,EAAEN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QACnCH,IAAI,EAAEA,IAAI;QACVS,QAAQ,EAAE,CAAC;QACXC,aAAa,EAAE,CAACR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI;QAC3CQ,UAAU,EAAET,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACU,EAAE,GAAG,CAAC;QACvCC,UAAU,EAAEX,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG;MACrC,CAAC;;MAED;MACA,QAAQH,IAAI;QACV,KAAK,MAAM;UACT,OAAO;YACL,GAAGC,YAAY;YACfa,MAAM,EAAE,CAAC;YACTC,WAAW,EAAEd,YAAY,CAACK,IAAI,GAAG,GAAG;YACpCU,WAAW,EAAEf,YAAY,CAACK,IAAI;YAC9BW,KAAK,EAAE9B,MAAM,GAAG,SAAS,GAAG;UAC9B,CAAC;QACH,KAAK,SAAS;UACZ,OAAO;YACL,GAAGc,YAAY;YACfiB,KAAK,EAAE,CAAC;YACRD,KAAK,EAAE9B,MAAM,GAAG,SAAS,GAAG;UAC9B,CAAC;QACH,KAAK,QAAQ;UACX,OAAO;YACL,GAAGc,YAAY;YACfgB,KAAK,EAAE9B,MAAM,GAAG,SAAS,GAAG;UAC9B,CAAC;QACH,KAAK,SAAS;UACZ,OAAO;YACL,GAAGc,YAAY;YACfgB,KAAK,EAAE9B,MAAM,GAAG,SAAS,GAAG;UAC9B,CAAC;QACH;UACE,OAAO;YACL,GAAGc,YAAY;YACfgB,KAAK,EAAE9B,MAAM,GAAG,SAAS,GAAG;UAC9B,CAAC;MACL;IACF,CAAC;IAED,MAAMgC,aAAa,GAAGA,CAAA,KAAM;MAC1BpC,YAAY,CAACO,OAAO,GAAG,EAAE;MACzB,MAAM8B,aAAa,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC;MAEzE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,MAAMrB,IAAI,GAAGoB,aAAa,CAAClB,IAAI,CAACoB,KAAK,CAACpB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGiB,aAAa,CAACG,MAAM,CAAC,CAAC;QAC5ExC,YAAY,CAACO,OAAO,CAACkC,IAAI,CAACzB,cAAc,CAACC,IAAI,CAAC,CAAC;MACjD;IACF,CAAC;IAED,MAAMyB,eAAe,GAAGA,CAAA,KAAM;MAC5B1C,YAAY,CAACO,OAAO,CAACoC,OAAO,CAAEC,QAAQ,IAAK;QACzCA,QAAQ,CAAC1C,CAAC,IAAI0C,QAAQ,CAACvB,EAAE;QACzBuB,QAAQ,CAACzC,CAAC,IAAIyC,QAAQ,CAACtB,EAAE;QACzBsB,QAAQ,CAAClB,QAAQ,IAAIkB,QAAQ,CAACjB,aAAa;QAC3CiB,QAAQ,CAAChB,UAAU,IAAIgB,QAAQ,CAACd,UAAU;;QAE1C;QACA,MAAMe,EAAE,GAAG5C,QAAQ,CAACM,OAAO,CAACL,CAAC,GAAG0C,QAAQ,CAAC1C,CAAC;QAC1C,MAAM4C,EAAE,GAAG7C,QAAQ,CAACM,OAAO,CAACJ,CAAC,GAAGyC,QAAQ,CAACzC,CAAC;QAC1C,MAAM4C,QAAQ,GAAG5B,IAAI,CAAC6B,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;QAE7C,IAAIC,QAAQ,GAAG,GAAG,EAAE;UAClB,MAAME,KAAK,GAAG,CAAC,GAAG,GAAGF,QAAQ,IAAI,GAAG;UACpCH,QAAQ,CAACvB,EAAE,IAAKwB,EAAE,GAAGE,QAAQ,GAAIE,KAAK,GAAG,IAAI;UAC7CL,QAAQ,CAACtB,EAAE,IAAKwB,EAAE,GAAGC,QAAQ,GAAIE,KAAK,GAAG,IAAI;UAC7CL,QAAQ,CAACrB,IAAI,GAAGqB,QAAQ,CAACnB,YAAY,GAAGwB,KAAK,GAAG,CAAC;UACjDL,QAAQ,CAACpB,OAAO,GAAGL,IAAI,CAAC+B,GAAG,CAAC,GAAG,EAAEN,QAAQ,CAACpB,OAAO,GAAGyB,KAAK,GAAG,GAAG,CAAC;QAClE,CAAC,MAAM;UACLL,QAAQ,CAACrB,IAAI,GAAGJ,IAAI,CAACgC,GAAG,CAACP,QAAQ,CAACnB,YAAY,EAAEmB,QAAQ,CAACrB,IAAI,GAAG,IAAI,CAAC;UACrEqB,QAAQ,CAACpB,OAAO,GAAGL,IAAI,CAACgC,GAAG,CAAC,GAAG,EAAEP,QAAQ,CAACpB,OAAO,GAAG,IAAI,CAAC;QAC3D;;QAEA;QACA,IAAIoB,QAAQ,CAAC1C,CAAC,GAAG,CAAC,IAAI0C,QAAQ,CAAC1C,CAAC,GAAGI,MAAM,CAACK,KAAK,EAAE;UAC/CiC,QAAQ,CAACvB,EAAE,IAAI,CAAC,GAAG;UACnBuB,QAAQ,CAAC1C,CAAC,GAAGiB,IAAI,CAACgC,GAAG,CAAC,CAAC,EAAEhC,IAAI,CAAC+B,GAAG,CAAC5C,MAAM,CAACK,KAAK,EAAEiC,QAAQ,CAAC1C,CAAC,CAAC,CAAC;QAC9D;QACA,IAAI0C,QAAQ,CAACzC,CAAC,GAAG,CAAC,IAAIyC,QAAQ,CAACzC,CAAC,GAAGG,MAAM,CAACQ,MAAM,EAAE;UAChD8B,QAAQ,CAACtB,EAAE,IAAI,CAAC,GAAG;UACnBsB,QAAQ,CAACzC,CAAC,GAAGgB,IAAI,CAACgC,GAAG,CAAC,CAAC,EAAEhC,IAAI,CAAC+B,GAAG,CAAC5C,MAAM,CAACQ,MAAM,EAAE8B,QAAQ,CAACzC,CAAC,CAAC,CAAC;QAC/D;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMiD,YAAY,GAAIR,QAAQ,IAAK;MACjCpC,GAAG,CAAC6C,IAAI,CAAC,CAAC;MACV7C,GAAG,CAAC8C,SAAS,CAACV,QAAQ,CAAC1C,CAAC,EAAE0C,QAAQ,CAACzC,CAAC,CAAC;MACrCK,GAAG,CAAC+C,MAAM,CAACX,QAAQ,CAAClB,QAAQ,CAAC;MAE7B,MAAM8B,KAAK,GAAGrC,IAAI,CAACsC,GAAG,CAACb,QAAQ,CAAChB,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;MACrD,MAAM8B,WAAW,GAAGd,QAAQ,CAACrB,IAAI,GAAGiC,KAAK;MAEzChD,GAAG,CAACmD,WAAW,GAAGf,QAAQ,CAACpB,OAAO;;MAElC;MACA,MAAMoC,QAAQ,GAAGpD,GAAG,CAACqD,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEH,WAAW,GAAG,CAAC,CAAC;MACzE,IAAItD,MAAM,EAAE;QACVwD,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAElB,QAAQ,CAACV,KAAK,CAAC;QACxC0B,QAAQ,CAACE,YAAY,CAAC,GAAG,EAAElB,QAAQ,CAACV,KAAK,GAAG,IAAI,CAAC;QACjD0B,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAElB,QAAQ,CAACV,KAAK,GAAG,IAAI,CAAC;MACjD,CAAC,MAAM;QACL0B,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAElB,QAAQ,CAACV,KAAK,GAAG,IAAI,CAAC;QAC/C0B,QAAQ,CAACE,YAAY,CAAC,GAAG,EAAElB,QAAQ,CAACV,KAAK,GAAG,IAAI,CAAC;QACjD0B,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAElB,QAAQ,CAACV,KAAK,GAAG,IAAI,CAAC;MACjD;MAEA1B,GAAG,CAACuD,SAAS,GAAGH,QAAQ;MAExB,QAAQhB,QAAQ,CAAC3B,IAAI;QACnB,KAAK,MAAM;UACT+C,QAAQ,CAACxD,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEoC,QAAQ,CAACb,MAAM,EAAE2B,WAAW,EAAEd,QAAQ,CAACZ,WAAW,CAAC;UACvE;QACF,KAAK,SAAS;UACZiC,WAAW,CAACzD,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEkD,WAAW,CAAC;UACnC;QACF,KAAK,SAAS;UACZQ,WAAW,CAAC1D,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEkD,WAAW,CAAC;UACnC;QACF;UACElD,GAAG,CAAC2D,SAAS,CAAC,CAAC;UACf3D,GAAG,CAAC4D,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEV,WAAW,EAAE,CAAC,EAAEvC,IAAI,CAACU,EAAE,GAAG,CAAC,CAAC;UAC1CrB,GAAG,CAAC6D,IAAI,CAAC,CAAC;MACd;MAEA7D,GAAG,CAAC8D,OAAO,CAAC,CAAC;IACf,CAAC;IAED,MAAMN,QAAQ,GAAGA,CAACxD,GAAG,EAAEN,CAAC,EAAEC,CAAC,EAAE4B,MAAM,EAAEE,WAAW,EAAED,WAAW,KAAK;MAChExB,GAAG,CAAC2D,SAAS,CAAC,CAAC;MACf,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,GAAG,CAAC,EAAEO,CAAC,EAAE,EAAE;QACnC,MAAMiC,MAAM,GAAGjC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAGL,WAAW,GAAGD,WAAW;QACtD,MAAMwC,KAAK,GAAIlC,CAAC,GAAGnB,IAAI,CAACU,EAAE,GAAIE,MAAM;QACpC,MAAM0C,EAAE,GAAGvE,CAAC,GAAGiB,IAAI,CAACuD,GAAG,CAACF,KAAK,CAAC,GAAGD,MAAM;QACvC,MAAMI,EAAE,GAAGxE,CAAC,GAAGgB,IAAI,CAACsC,GAAG,CAACe,KAAK,CAAC,GAAGD,MAAM;QACvC,IAAIjC,CAAC,KAAK,CAAC,EAAE9B,GAAG,CAACoE,MAAM,CAACH,EAAE,EAAEE,EAAE,CAAC,CAAC,KAC3BnE,GAAG,CAACqE,MAAM,CAACJ,EAAE,EAAEE,EAAE,CAAC;MACzB;MACAnE,GAAG,CAACsE,SAAS,CAAC,CAAC;MACftE,GAAG,CAAC6D,IAAI,CAAC,CAAC;IACZ,CAAC;IAED,MAAMJ,WAAW,GAAGA,CAACzD,GAAG,EAAEN,CAAC,EAAEC,CAAC,EAAEoE,MAAM,KAAK;MACzC/D,GAAG,CAAC2D,SAAS,CAAC,CAAC;MACf,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMkC,KAAK,GAAIlC,CAAC,GAAGnB,IAAI,CAACU,EAAE,GAAI,CAAC;QAC/B,MAAM4C,EAAE,GAAGvE,CAAC,GAAGiB,IAAI,CAACuD,GAAG,CAACF,KAAK,CAAC,GAAGD,MAAM;QACvC,MAAMI,EAAE,GAAGxE,CAAC,GAAGgB,IAAI,CAACsC,GAAG,CAACe,KAAK,CAAC,GAAGD,MAAM;QACvC,IAAIjC,CAAC,KAAK,CAAC,EAAE9B,GAAG,CAACoE,MAAM,CAACH,EAAE,EAAEE,EAAE,CAAC,CAAC,KAC3BnE,GAAG,CAACqE,MAAM,CAACJ,EAAE,EAAEE,EAAE,CAAC;MACzB;MACAnE,GAAG,CAACsE,SAAS,CAAC,CAAC;MACftE,GAAG,CAAC6D,IAAI,CAAC,CAAC;IACZ,CAAC;IAED,MAAMH,WAAW,GAAGA,CAAC1D,GAAG,EAAEN,CAAC,EAAEC,CAAC,EAAEoB,IAAI,KAAK;MACvCf,GAAG,CAAC2D,SAAS,CAAC,CAAC;MACf3D,GAAG,CAACoE,MAAM,CAAC1E,CAAC,EAAEC,CAAC,GAAGoB,IAAI,CAAC;MACvBf,GAAG,CAACqE,MAAM,CAAC3E,CAAC,GAAGqB,IAAI,EAAEpB,CAAC,CAAC;MACvBK,GAAG,CAACqE,MAAM,CAAC3E,CAAC,EAAEC,CAAC,GAAGoB,IAAI,CAAC;MACvBf,GAAG,CAACqE,MAAM,CAAC3E,CAAC,GAAGqB,IAAI,EAAEpB,CAAC,CAAC;MACvBK,GAAG,CAACsE,SAAS,CAAC,CAAC;MACftE,GAAG,CAAC6D,IAAI,CAAC,CAAC;IACZ,CAAC;IAED,MAAMU,aAAa,GAAGA,CAAA,KAAM;MAC1BvE,GAAG,CAACwE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE1E,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACQ,MAAM,CAAC;;MAEhD;MACAd,YAAY,CAACO,OAAO,CAACoC,OAAO,CAAEC,QAAQ,IAAK;QACzCQ,YAAY,CAACR,QAAQ,CAAC;MACxB,CAAC,CAAC;;MAEF;MACA5C,YAAY,CAACO,OAAO,CAACoC,OAAO,CAAC,CAACC,QAAQ,EAAEN,CAAC,KAAK;QAC5CtC,YAAY,CAACO,OAAO,CAAC0E,KAAK,CAAC3C,CAAC,GAAG,CAAC,CAAC,CAACK,OAAO,CAAEuC,aAAa,IAAK;UAC3D,MAAMrC,EAAE,GAAGD,QAAQ,CAAC1C,CAAC,GAAGgF,aAAa,CAAChF,CAAC;UACvC,MAAM4C,EAAE,GAAGF,QAAQ,CAACzC,CAAC,GAAG+E,aAAa,CAAC/E,CAAC;UACvC,MAAM4C,QAAQ,GAAG5B,IAAI,CAAC6B,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;UAE7C,IAAIC,QAAQ,GAAG,GAAG,EAAE;YAClBvC,GAAG,CAAC2D,SAAS,CAAC,CAAC;YACf3D,GAAG,CAACoE,MAAM,CAAChC,QAAQ,CAAC1C,CAAC,EAAE0C,QAAQ,CAACzC,CAAC,CAAC;YAClCK,GAAG,CAACqE,MAAM,CAACK,aAAa,CAAChF,CAAC,EAAEgF,aAAa,CAAC/E,CAAC,CAAC;YAE5C,MAAMqB,OAAO,GAAGL,IAAI,CAACgC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAGJ,QAAQ,GAAG,GAAG,CAAC;YACjDvC,GAAG,CAAC2E,WAAW,GAAG/E,MAAM,GACpB,sBAAsBoB,OAAO,GAAG,GAChC,sBAAsBA,OAAO,GAAG;YACpChB,GAAG,CAAC4E,SAAS,GAAG,GAAG;YACnB5E,GAAG,CAAC6E,MAAM,CAAC,CAAC;UACd;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB5C,eAAe,CAAC,CAAC;MACjBqC,aAAa,CAAC,CAAC;MACfhF,YAAY,CAACQ,OAAO,GAAGgF,qBAAqB,CAACD,OAAO,CAAC;IACvD,CAAC;IAED,MAAME,eAAe,GAAIC,CAAC,IAAK;MAC7BxF,QAAQ,CAACM,OAAO,CAACL,CAAC,GAAGuF,CAAC,CAACC,OAAO;MAC9BzF,QAAQ,CAACM,OAAO,CAACJ,CAAC,GAAGsF,CAAC,CAACE,OAAO;IAChC,CAAC;IAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;MAC9BvF,SAAS,CAAC,CAACD,MAAM,CAAC;MAClBJ,YAAY,CAACO,OAAO,CAACoC,OAAO,CAACC,QAAQ,IAAI;QACvC;QACA,QAAQA,QAAQ,CAAC3B,IAAI;UACnB,KAAK,MAAM;YACT2B,QAAQ,CAACV,KAAK,GAAG,CAAC9B,MAAM,GAAG,SAAS,GAAG,SAAS;YAChD;UACF,KAAK,SAAS;YACZwC,QAAQ,CAACV,KAAK,GAAG,CAAC9B,MAAM,GAAG,SAAS,GAAG,SAAS;YAChD;UACF,KAAK,QAAQ;YACXwC,QAAQ,CAACV,KAAK,GAAG,CAAC9B,MAAM,GAAG,SAAS,GAAG,SAAS;YAChD;UACF,KAAK,SAAS;YACZwC,QAAQ,CAACV,KAAK,GAAG,CAAC9B,MAAM,GAAG,SAAS,GAAG,SAAS;YAChD;UACF;YACEwC,QAAQ,CAACV,KAAK,GAAG,CAAC9B,MAAM,GAAG,SAAS,GAAG,SAAS;QACpD;MACF,CAAC,CAAC;IACJ,CAAC;IAEDM,YAAY,CAAC,CAAC;IACd0B,aAAa,CAAC,CAAC;IACfkD,OAAO,CAAC,CAAC;IAET1E,MAAM,CAACiF,gBAAgB,CAAC,QAAQ,EAAEnF,YAAY,CAAC;IAC/CE,MAAM,CAACiF,gBAAgB,CAAC,WAAW,EAAEL,eAAe,CAAC;IAErD,OAAO,MAAM;MACX5E,MAAM,CAACkF,mBAAmB,CAAC,QAAQ,EAAEpF,YAAY,CAAC;MAClDE,MAAM,CAACkF,mBAAmB,CAAC,WAAW,EAAEN,eAAe,CAAC;MACxD,IAAIzF,YAAY,CAACQ,OAAO,EAAE;QACxBwF,oBAAoB,CAAChG,YAAY,CAACQ,OAAO,CAAC;MAC5C;IACF,CAAC;EACH,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,oBACEV,OAAA;IAAKsG,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDvG,OAAA;MACEwG,GAAG,EAAEpG,SAAU;MACfkG,SAAS,EAAC,eAAe;MACzBG,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAc;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACF9G,OAAA;MACE+G,OAAO,EAAEA,CAAA,KAAMpG,SAAS,CAAC,CAACD,MAAM,CAAE;MAClC4F,SAAS,EAAC,gLAAgL;MAAAC,QAAA,EAEzL7F,MAAM,GAAG,UAAU,GAAG;IAAS;MAAAiG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3G,EAAA,CAhSIF,0BAA0B;AAAA+G,EAAA,GAA1B/G,0BAA0B;AAkShC,eAAeA,0BAA0B;AAAC,IAAA+G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}